@page "/login"

@inject IAuthenticationRepository _authRepo
@inject NavigationManager _navManager


<h3 class="card-title">Login</h3>
@if (!response)
{
    <ErrorMessage Message="Something went wrong with login"></ErrorMessage>
}
<div class="card-body">
    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="email">Email Address</label>
            <InputText Id="email" class="form-control"
                       @bind-Value="loginModel.EmailAddress" />
            <ValidationMessage For="@(() => loginModel.EmailAddress)" />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <InputText Id="password" type="password" class="form-control"
                       @bind-Value="loginModel.Password" />
            <ValidationMessage For="@(() => loginModel.Password)" />
        </div>
        <button type="submit" class="btn btn-primary btn-block">Login</button>
    </EditForm>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private bool loginFailed = false;
    private bool response = true;
    private async Task HandleLogin()
    {
        response = await _authRepo.Login(loginModel);

        if (response)
        {
            _navManager.NavigateTo("/");
        }
    }
}
