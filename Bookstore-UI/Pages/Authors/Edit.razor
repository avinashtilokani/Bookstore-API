@page "/authors/edit/{id}"
@attribute [Authorize(Roles ="Administrator")]
@inject IAuthorRepository _authorRepo
@inject NavigationManager _navManager
@inject IToastService _toastService


<h3 class="card-title">Edit Author</h3>

@if (failed)
{
    <ErrorMessage Message="Something went wrong with Edit."></ErrorMessage>
}

@if (_author == null)
{
    <LoadingMessage Message="Loading Author For Edit..."></LoadingMessage>
}
else
{
    <EditForm Model="_author" OnValidSubmit="EditAuthor">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="firstName">First Name</label>
            <InputText @bind-Value="_author.Firstname" class="form-control" id="firstName"></InputText>
        </div>
        <div class="form-group">
            <label for="lastName">Last Name</label>
            <InputText @bind-Value="_author.Lastname" class="form-control" id="lastName"></InputText>
        </div>
        <div class="form-group">
            <label for="bio">Biography</label>
            <InputTextArea @bind-Value="_author.Bio" class="form-control" id="bio"></InputTextArea>
        </div>
        <button class="btn btn-primary" type="submit">
            <span class="oi oi-pencil"></span>
            Submit Changes
        </button> |
        <button class="btn btn-primary" @onclick="BackToList">
            <span class="oi oi-media-skip-backward"></span>
            Back To List
        </button>
    </EditForm>
}

@code {
    [Parameter]
    public string Id { get; set; }

    private Author _author;

    private bool failed = false;

    protected override async Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);

        _author = await _authorRepo.Get(Bookstore_UI.Static.Endpoints.AuthorsEndpoint, id);
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/authors/");
    }

    private async Task EditAuthor()
    {
        bool success = await _authorRepo.Update(Bookstore_UI.Static.Endpoints.AuthorsEndpoint, _author, Convert.ToInt32(Id));

        if (success)
        {
            _toastService.ShowSuccess("Author Updated");
            BackToList();
        }
        else
        {
            failed = true;
        }
    }

}
