@page "/books/delete/{id}"
@attribute [Authorize(Roles = "Administrator")]

@inject IBookRepository _bookRepo
@inject NavigationManager _navManager
@inject IFileUpload _fileUpload
@inject IToastService _toastService

<h3>Are you sure you want to delete this book?</h3>
<hr />
<br />
@if (!_success)
{
    <ErrorMessage Message="Something went wrong with delete"></ErrorMessage>
}

@if (string.IsNullOrEmpty(Id) || int.Parse(Id) < 1)
{
    <ErrorMessage Message="Invalid selection. Please try again" />
}
else if (_book == null)
{
    <LoadingMessage Message="Loading book details" />
}
else
{
    <div class="row">
        <div class="col-md-6">
            <table class="table table-responsive">
                <tr>
                    <td><strong>Title</strong></td>
                    <td>@_book.Title</td>
                </tr>
                <tr>
                    <td><strong>Author</strong></td>
                    <td>
                        @if (_book.Author != null)
                        {
                            <a href="/books/author/@_book.AuthorId">
                                @_book.Author.Firstname @_book.Author.Lastname
                            </a>
                        }
                    </td>
                </tr>
                <tr>
                    <td><strong>Summary</strong></td>
                    <td>@_book.Summary</td>
                </tr>
                <tr>
                    <td><strong>Year Published</strong></td>
                    <td>@_book.Year</td>
                </tr>
                <tr>
                    <td><strong>ISBN</strong></td>
                    <td>@_book.ISBN</td>
                </tr>
            </table>
        </div>
        <div class="col-md-4">
            <img src="uploads/@_book.Image" style="height: 300px; width: 300px;" />
            <h3 class="text-center text-info">@_book.Price</h3>
        </div>
    </div>

}

<button class="btn btn-danger" @onclick="DeleteBook">
    <span class="oi oi-delete"></span>
    Delete
</button>
    |
<button class="btn btn-primary" @onclick="BackToList">
    <span class="oi oi-media-skip-backward"></span>
    Back To List
</button>



@code {
    [Parameter]
    public string Id { get; set; }

    private bool _success = true;
    private Book _book = new Book();

    protected async override Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);

        _book = await _bookRepo.Get(Bookstore_UI.Static.Endpoints.BooksEndpoint, id);
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/books/");
    }

    private async Task DeleteBook()
    {
        _fileUpload.RemoveFile(_book.Image);
        _success = await _bookRepo.Delete(Bookstore_UI.Static.Endpoints.BooksEndpoint, _book.Id);

        if(_success)
        {
            _toastService.ShowSuccess("Book Deleted");
            BackToList();
        }
    }
}

