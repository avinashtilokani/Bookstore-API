@page "/books/view/{Id}"
@inject IBookRepository _bookRepo
@inject NavigationManager _navManager

<h3>View Book Details</h3>

@if (string.IsNullOrWhiteSpace(Id) || int.Parse(Id) < 1)
{
    <ErrorMessage Message="Invalid selection. Please try again."></ErrorMessage>
}
else if (_book == null)
{
    <LoadingMessage Message="Loading book details..."></LoadingMessage>
}
else
{
    <div class="row">
        <div class="col-md-6">
            <table class="table table-responsive">
                <tr>
                    <td><strong>Title</strong></td>
                    <td>@_book.Title</td>
                </tr>
                <tr>
                    <td><strong>Author</strong></td>
                    <td>
                        @if (_book.Author != null)
                        {
                            <a href="/authors/view/@_book.AuthorId">
                                @_book.Author.Firstname @_book.Author.Lastname
                            </a>
                        }
                    </td>
                </tr>
                <tr>
                    <td><strong>Summary</strong></td>
                    <td>@_book.Summary</td>
                </tr>
                <tr>
                    <td><strong>Published Year</strong></td>
                    <td>@_book.Year</td>
                </tr>
                <tr>
                    <td><strong>ISBN</strong></td>
                    <td>@_book.ISBN</td>
                </tr>
            </table>
        </div>
        <div class="col-md-4">
            <img src="@string.Format("data:image/png;base64,{0}", _book.File)" style="height: 300px; width: 300px" />
            <h3 class="text-center text-info">@string.Format("{0:C}", _book.Price)</h3>
        </div>
    </div>
}

<button class="btn btn-warning" @onclick="GoToEdit"><span class="oi oi-pencil"></span> Edit Book</button>
| <button class="btn btn-danger" @onclick="GoToDelete"><span class="oi oi-circle-x"></span> Delete Book</button>
| <a href="/books/" class="btn btn-primary">
    <span class="oi oi-media-skip-backward"></span>
     Back to List
</a>

@code {
    [Parameter]
    public string Id { get; set; }

    private Book _book = new Book();

    protected override async Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);

        _book = await _bookRepo.Get(Bookstore_UI.WASM.Static.Endpoints.BooksEndpoint, id);
    }

    private void GoToEdit()
    {
        _navManager.NavigateTo($"/books/edit/{_book.Id}");
    }

    private void GoToDelete()
    {
        _navManager.NavigateTo($"/books/delete/{_book.Id}");
    }
}
